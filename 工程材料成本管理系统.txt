-- 创建数据库
CREATE DATABASE IF NOT EXISTS material_cost_db;
USE material_cost_db;

-- 材料类别表
CREATE TABLE material_categories (
    category_id INT AUTO_INCREMENT PRIMARY KEY,
    category_name VARCHAR(50) NOT NULL,
    description TEXT
);

-- 材料基本信息表
CREATE TABLE materials (
    material_id INT AUTO_INCREMENT PRIMARY KEY,
    material_code VARCHAR(20) UNIQUE NOT NULL,
    material_name VARCHAR(100) NOT NULL,
    category_id INT,
    specification VARCHAR(100),
    unit VARCHAR(20) NOT NULL,
    remarks TEXT,
    FOREIGN KEY (category_id) REFERENCES material_categories(category_id)
);

-- 供应商表
CREATE TABLE suppliers (
    supplier_id INT AUTO_INCREMENT PRIMARY KEY,
    supplier_name VARCHAR(100) NOT NULL,
    contact_person VARCHAR(50),
    phone VARCHAR(20),
    email VARCHAR(100),
    address TEXT,
    registration_date DATE
);

-- 材料价格表
CREATE TABLE material_prices (
    price_id INT AUTO_INCREMENT PRIMARY KEY,
    material_id INT NOT NULL,
    supplier_id INT NOT NULL,
    price DECIMAL(10,2) NOT NULL,
    effective_date DATE NOT NULL,
    is_current BOOLEAN DEFAULT TRUE,
    FOREIGN KEY (material_id) REFERENCES materials(material_id),
    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)
);

-- 用户表(简单权限管理)
CREATE TABLE users (
    user_id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(50) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL,
    role ENUM('admin', 'user') DEFAULT 'user',
    full_name VARCHAR(100)
);

-- 为常用查询字段添加索引
CREATE INDEX idx_material_name ON materials(material_name);
CREATE INDEX idx_material_code ON materials(material_code);
CREATE INDEX idx_price_material ON material_prices(material_id);
CREATE INDEX idx_price_supplier ON material_prices(supplier_id);
CREATE INDEX idx_price_date ON material_prices(effective_date);

-- 添加新材料
INSERT INTO materials (material_code, material_name, category_id, specification, unit)
VALUES ('M-001', '普通硅酸盐水泥', 1, 'P.O 42.5', '吨');

-- 添加供应商
INSERT INTO suppliers (supplier_name, contact_person, phone, email)
VALUES ('XX建材有限公司', '张经理', '13800138000', 'sales@xxjc.com');

-- 记录材料价格
INSERT INTO material_prices (material_id, supplier_id, price, effective_date)
VALUES (1, 1, 450.00, '2023-01-01');


-- 查询某材料的最新价格
SELECT m.material_name, s.supplier_name, mp.price, mp.effective_date
FROM material_prices mp
JOIN materials m ON mp.material_id = m.material_id
JOIN suppliers s ON mp.supplier_id = s.supplier_id
WHERE mp.material_id = 1 AND mp.is_current = TRUE;

-- 查询某类材料的所有供应商报价
SELECT m.material_name, s.supplier_name, mp.price, mp.effective_date
FROM material_prices mp
JOIN materials m ON mp.material_id = m.material_id
JOIN suppliers s ON mp.supplier_id = s.supplier_id
WHERE m.category_id = 1 AND mp.is_current = TRUE
ORDER BY m.material_name, mp.price;

-- 材料价格变动历史
SELECT m.material_name, s.supplier_name, mp.price, mp.effective_date
FROM material_prices mp
JOIN materials m ON mp.material_id = m.material_id
JOIN suppliers s ON mp.supplier_id = s.supplier_id
WHERE mp.material_id = 1
ORDER BY mp.effective_date DESC;

-- 价格变动触发器(当有新价格时，自动将旧价格标记为非当前)
DELIMITER //
CREATE TRIGGER update_current_price BEFORE INSERT ON material_prices
FOR EACH ROW
BEGIN
    UPDATE material_prices 
    SET is_current = FALSE 
    WHERE material_id = NEW.material_id 
    AND supplier_id = NEW.supplier_id
    AND is_current = TRUE;
END//

